{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\telegram_invoice_manager\\\\frontend-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Pie } from \"react-chartjs-2\";\nimport { login, fetchInvoices, registerUser, verifyOtp, uploadInvoice } from \"./api\";\nimport TaskPoller from \"./components/TaskPoller\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [telegramChatId, setTelegramChatId] = useState(\"\");\n  const [view, setView] = useState(\"login\");\n  const [message, setMessage] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const fileInputRef = useRef(null);\n  const clearMessage = () => {\n    setTimeout(() => setMessage(\"\"), 5000);\n  };\n  const handleLogin = async () => {\n    setMessage(\"\");\n    try {\n      const {\n        access_token\n      } = await login(email, password);\n      setToken(access_token);\n      localStorage.setItem(\"authToken\", access_token);\n      setView(\"dashboard\");\n      setMessage(\"Login successful!\");\n      clearMessage();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      setMessage(`Login failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n      clearMessage();\n    }\n  };\n  const handleRegister = async () => {\n    setMessage(\"\");\n    try {\n      const response = await registerUser(email, password, phone, telegramChatId);\n      setMessage(response.message || \"Registration successful! Please verify OTP.\");\n      setView(\"verify-otp\");\n      clearMessage();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      setMessage(`Registration failed: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message}`);\n      clearMessage();\n    }\n  };\n  const handleVerifyOtp = async () => {\n    setMessage(\"\");\n    try {\n      const {\n        access_token\n      } = await verifyOtp(email, otp, telegramChatId);\n      setToken(access_token);\n      localStorage.setItem(\"authToken\", access_token);\n      setView(\"dashboard\");\n      setMessage(\"OTP verified and logged in successfully!\");\n      clearMessage();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"OTP verification error:\", error);\n      setMessage(`OTP verification failed: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message}`);\n      clearMessage();\n    }\n  };\n  const handleLogout = () => {\n    setToken(null);\n    localStorage.removeItem(\"authToken\");\n    setInvoices([]);\n    setChartData({});\n    setEmail(\"\");\n    setPassword(\"\");\n    setPhone(\"\");\n    setOtp(\"\");\n    setTelegramChatId(\"\");\n    setView(\"login\");\n    setMessage(\"Logged out successfully.\");\n    clearMessage();\n  };\n  const updateInvoices = newInvoices => {\n    console.log(\"App.js - updateInvoices: Received newInvoices:\", newInvoices); // Debugging log\n    // Ensure newInvoices is an array and each item has an 'id' for DataGrid\n    if (Array.isArray(newInvoices)) {\n      const invoicesWithIds = newInvoices.map((invoice, index) => ({\n        ...invoice,\n        // Use existing invoice.id or fallback to a unique index if id is missing/null/undefined\n        id: invoice.id || `temp-id-${index}-${Date.now()}`\n      }));\n      setInvoices(invoicesWithIds);\n      const categoryCounts = invoicesWithIds.reduce((acc, invoice) => {\n        const category = invoice.category || \"Uncategorized\";\n        acc[category] = (acc[category] || 0) + 1;\n        return acc;\n      }, {});\n      setChartData({\n        labels: Object.keys(categoryCounts),\n        datasets: [{\n          data: Object.values(categoryCounts),\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#8A2BE2', '#7FFF00', '#D2691E', '#FF7F50', '#6495ED', '#DC143C', '#00CED1', '#FFD700', '#ADFF2F', '#FF69B4', '#20B2AA', '#F0E68C'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#8A2BE2', '#7FFF00', '#D2691E', '#FF7F50', '#6495ED', '#DC143C', '#00CED1', '#FFD700', '#ADFF2F', '#FF69B4', '#20B2AA', '#F0E68C']\n        }]\n      });\n    } else {\n      console.warn(\"App.js - updateInvoices: Received non-array for newInvoices:\", newInvoices);\n      setInvoices([]);\n      setChartData({});\n    }\n  };\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setMessage(`Selected file: ${event.target.files[0].name}`);\n    } else {\n      setSelectedFile(null);\n      setMessage(\"No file selected.\");\n      clearMessage();\n    }\n  };\n  const handleUploadInvoice = async () => {\n    if (!selectedFile) {\n      setMessage(\"Please select a file to upload.\");\n      clearMessage();\n      return;\n    }\n    setUploading(true);\n    setMessage(\"Uploading invoice...\");\n    try {\n      const response = await uploadInvoice(token, selectedFile);\n      setMessage(response.message || \"Invoice uploaded successfully!\");\n      setSelectedFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\"; // Clear file input visual\n      }\n      // Immediately refresh invoices after successful upload\n      const updatedInvoices = await fetchInvoices(token);\n      updateInvoices(updatedInvoices);\n      clearMessage();\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Upload error:\", error);\n      setMessage(`Upload failed: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || error.message || \"Unknown error\"}`);\n      clearMessage();\n    } finally {\n      setUploading(false);\n    }\n  };\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"authToken\");\n    if (storedToken) {\n      setToken(storedToken);\n      setView(\"dashboard\");\n    }\n  }, []);\n  const renderContent = () => {\n    if (view === \"login\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg shadow-md w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-center text-gray-800 mb-6\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `mb-4 text-center ${message.includes(\"failed\") ? \"text-red-500\" : \"text-green-500\"}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogin,\n            className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-center text-gray-600\",\n            children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setView(\"register\"),\n              className: \"text-blue-600 hover:underline\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    } else if (view === \"register\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg shadow-md w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-center text-gray-800 mb-6\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `mb-4 text-center ${message.includes(\"failed\") ? \"text-red-500\" : \"text-green-500\"}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Phone Number\",\n              value: phone,\n              onChange: e => setPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Telegram Chat ID (Optional)\",\n              value: telegramChatId,\n              onChange: e => setTelegramChatId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegister,\n            className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-center text-gray-600\",\n            children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setView(\"login\"),\n              className: \"text-blue-600 hover:underline\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this);\n    } else if (view === \"verify-otp\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg shadow-md w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-center text-gray-800 mb-6\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 21\n          }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `mb-4 text-center ${message.includes(\"failed\") ? \"text-red-500\" : \"text-green-500\"}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-100\",\n              placeholder: \"Email\",\n              value: email,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Enter OTP\",\n              value: otp,\n              onChange: e => setOtp(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVerifyOtp,\n            className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-center text-gray-600\",\n            children: [\"Back to\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setView(\"login\"),\n              className: \"text-blue-600 hover:underline\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this);\n    } else if (view === \"dashboard\") {\n      console.log(\"App.js - renderDashboard: Current invoices state:\", invoices); // Debugging log\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen bg-gray-100 p-8\",\n        children: [/*#__PURE__*/_jsxDEV(TaskPoller, {\n          onUpdate: updateInvoices,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-gray-800\",\n            children: \"Invoice Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 transition duration-200\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `mb-4 text-center ${message.includes(\"failed\") || message.includes(\"Error\") ? \"text-red-500\" : \"text-green-500\"}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4 text-gray-700\",\n            children: \"Invoice Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert(\"Download CSV functionality will be implemented here!\") // Placeholder\n              ,\n              className: \"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 transition duration-200\",\n              children: \"Download Invoices as CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleFileChange,\n              accept: \"image/*\",\n              className: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fileInputRef.current.click(),\n              className: \"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\",\n              disabled: uploading,\n              children: \"Upload New Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUploadInvoice,\n              className: \"bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-opacity-50 transition duration-200\",\n              disabled: uploading,\n              children: uploading ? \"Uploading...\" : `Confirm Upload (${selectedFile.name})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md overflow-x-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-gray-700\",\n              children: \"Your Invoices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n              rows: invoices // 'invoices' state should already have 'id' property now\n              ,\n              columns: [{\n                field: \"id\",\n                headerName: \"ID\",\n                width: 90\n              }, {\n                field: \"status\",\n                headerName: \"Status\",\n                width: 150\n              }, {\n                field: \"category\",\n                headerName: \"Category\",\n                width: 180\n              }, {\n                field: \"extracted_data\",\n                headerName: \"Extracted Data\",\n                // Explicitly English\n                width: 300,\n                valueFormatter: params => {\n                  const data = params.value;\n                  if (data && typeof data === 'object') {\n                    const keys = Object.keys(data);\n                    if (keys.length > 0) {\n                      const rawText = data.raw_text ? data.raw_text.substring(0, 50) + \"...\" : \"\";\n                      return rawText || JSON.stringify(data).substring(0, 50) + \"...\";\n                    }\n                  }\n                  return JSON.stringify(data);\n                }\n              }, {\n                field: \"created_at\",\n                headerName: \"Created At\",\n                // Explicitly English\n                width: 200,\n                valueFormatter: params => new Date(params.value).toLocaleString()\n              }, {\n                field: \"preview_url\",\n                headerName: \"Download\",\n                // Explicitly English\n                width: 150,\n                renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: params.value,\n                    download: true,\n                    className: \"text-green-600 hover:underline px-2 py-1 rounded-md bg-green-100\",\n                    style: params.value === \"#\" ? {\n                      pointerEvents: \"none\",\n                      opacity: 0.6\n                    } : {},\n                    children: \"Download\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this)\n              }],\n              pageSize: 5,\n              rowsPerPageOptions: [5],\n              className: \"rounded-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-gray-700\",\n              children: \"Category Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), chartData.labels && chartData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center h-80\",\n              children: /*#__PURE__*/_jsxDEV(Pie, {\n                data: chartData,\n                options: {\n                  maintainAspectRatio: false,\n                  responsive: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-600\",\n              children: \"No category data available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderContent()\n  }, void 0, false);\n}\n_s(App, \"Zg/zQ0XJWCYChtooHT8wcQQzlHc=\");\n_c = App;\nexport default App;\n\n//import React, { useState, useEffect, useRef } from \"react\";\n//import { DataGrid } from \"@mui/x-data-grid\";\n//import { Pie } from \"react-chartjs-2\";\n//import { login, fetchInvoices, registerUser, verifyOtp } from \"./api\"; // Import new API functions\n//import TaskPoller from \"./components/TaskPoller\";\n//\n//function App() {\n//  const [token, setToken] = useState(null);\n//  const [invoices, setInvoices] = useState([]);\n//  const [chartData, setChartData] = useState({});\n//  const [email, setEmail] = useState(\"\");\n//  const [password, setPassword] = useState(\"\");\n//  const [phone, setPhone] = useState(\"\"); // New state for phone number\n//  const [otp, setOtp] = useState(\"\"); // New state for OTP\n//  const [telegramChatId, setTelegramChatId] = useState(\"\"); // New state for Telegram Chat ID\n//  const [view, setView] = useState(\"login\"); // 'login', 'register', 'verify-otp', 'dashboard'\n//  const [message, setMessage] = useState(\"\"); // For displaying success/error messages to the user\n//\n//  // Function to clear messages after a delay\n//  const clearMessage = () => {\n//    setTimeout(() => setMessage(\"\"), 5000); // Clear message after 5 seconds\n//  };\n//\n//  const handleLogin = async () => {\n//    setMessage(\"\"); // Clear previous messages\n//    try {\n//      const { access_token } = await login(email, password);\n//      setToken(access_token);\n//      setView(\"dashboard\"); // Switch to dashboard on successful login\n//      setMessage(\"Login successful!\");\n//      clearMessage();\n//    } catch (error) {\n//      console.error(\"Login failed:\", error);\n//      setMessage(\"Login failed! Please check your email and password.\");\n//      clearMessage();\n//    }\n//  };\n//\n//  const handleRegister = async () => {\n//    setMessage(\"\"); // Clear previous messages\n//    try {\n//      // Pass optional telegramChatId only if it's not empty\n//      const tgChatIdToSend = telegramChatId.trim() === \"\" ? null : telegramChatId.trim();\n//      const response = await registerUser(email, password, phone, tgChatIdToSend);\n//      setMessage(response.message || \"Registration successful! Please check your phone for OTP.\");\n//      setView(\"verify-otp\"); // Move to OTP verification after registration\n//      clearMessage();\n//    } catch (error) {\n//      console.error(\"Registration failed:\", error);\n//      setMessage(error.response?.data?.detail || \"Registration failed! Email or phone might be already registered.\");\n//      clearMessage();\n//    }\n//  };\n//\n//  const handleVerifyOtp = async () => {\n//    setMessage(\"\"); // Clear previous messages\n//    try {\n//      // Pass optional telegramChatId only if it's not empty\n//      const tgChatIdToSend = telegramChatId.trim() === \"\" ? null : telegramChatId.trim();\n//      const { message: verificationMessage, token: jwtToken } = await verifyOtp(email, otp, tgChatIdToSend);\n//      setToken(jwtToken);\n//      setMessage(verificationMessage);\n//      setView(\"dashboard\"); // Move to dashboard on successful OTP verification\n//      clearMessage();\n//    } catch (error) {\n//      console.error(\"OTP verification failed:\", error);\n//      setMessage(error.response?.data?.detail || \"OTP verification failed! Invalid or expired OTP.\");\n//      clearMessage();\n//    }\n//  };\n//\n//  useEffect(() => {\n//    if (token) {\n//      fetchInvoices(token).then(setInvoices);\n//    }\n//  }, [token]);\n//\n//  useEffect(() => {\n//    const counts = invoices.reduce((acc, inv) => {\n//      const category = inv.category && inv.category !== \"\" ? inv.category : \"Uncategorized\";\n//      acc[category] = (acc[category] || 0) + 1;\n//      return acc;\n//    }, {});\n//    setChartData({\n//      labels: Object.keys(counts),\n//      datasets: [{\n//        data: Object.values(counts),\n//        backgroundColor: [\n//          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\n//          '#FF9F40', '#FFCD56', '#C9CBCF', '#7E57C2', '#42A5F5', '#8D6E63', '#9CCC65', '#26A69A'\n//        ],\n//        hoverBackgroundColor: [\n//          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\n//          '#FF9F40', '#FFCD56', '#C9CBCF', '#7E57C2', '#42A5F5', '#8D6E63', '#9CCC65', '#26A69A'\n//        ]\n//      }]\n//    });\n//  }, [invoices]);\n//\n//  const handleDownloadCSV = () => {\n//    if (invoices.length === 0) {\n//      setMessage(\"No invoices to download.\");\n//      clearMessage();\n//      return;\n//    }\n//\n//    // Prepare CSV header\n//    const headers = [\"ID\", \"Created At\", \"Category\", \"Status\", \"Raw Text\", \"Preview URL\"];\n//    // Extract actual data rows\n//    const csvRows = invoices.map(invoice => {\n//      // Flatten extracted_data for CSV, or represent as JSON string\n//      const rawText = invoice.extracted_data?.raw_text ? JSON.stringify(invoice.extracted_data.raw_text) : \"\";\n//      return [\n//        invoice.id,\n//        invoice.created_at,\n//        `\"${invoice.category}\"`, // Quote category to handle commas if any\n//        invoice.status,\n//        `\"${rawText.replace(/\"/g, '\"\"')}\"`, // Escape double quotes within the text\n//        invoice.preview_url\n//      ].join(\",\");\n//    });\n//\n//    const csvContent = [\n//      headers.join(\",\"),\n//      ...csvRows\n//    ].join(\"\\n\");\n//\n//    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//    const link = document.createElement('a');\n//    if (link.download !== undefined) { // Feature detection for download attribute\n//      const url = URL.createObjectURL(blob);\n//      link.setAttribute('href', url);\n//      link.setAttribute('download', 'invoices.csv');\n//      link.style.visibility = 'hidden';\n//      document.body.appendChild(link);\n//      link.click();\n//      document.body.removeChild(link);\n//      setMessage(\"Invoices downloaded as CSV!\");\n//      clearMessage();\n//    } else {\n//      setMessage(\"Your browser does not support downloading files directly.\");\n//      clearMessage();\n//    }\n//  };\n//\n//\n//  // Render different views based on the 'view' state\n//  const renderContent = () => {\n//    if (view === \"login\") {\n//      return (\n//        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 font-sans\">\n//          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-sm\">\n//            <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Login</h2>\n//            {message && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\n//            <div className=\"mb-4\">\n//              <input\n//                type=\"email\"\n//                placeholder=\"Email\"\n//                value={email}\n//                onChange={(e) => setEmail(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <div className=\"mb-6\">\n//              <input\n//                type=\"password\"\n//                placeholder=\"Password\"\n//                value={password}\n//                onChange={(e) => setPassword(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <button\n//              onClick={handleLogin}\n//              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200\"\n//            >\n//              Log In\n//            </button>\n//            <p className=\"mt-4 text-center text-gray-600\">\n//              Don't have an account?{\" \"}\n//              <button onClick={() => { setView(\"register\"); setMessage(\"\"); }} className=\"text-blue-600 hover:underline\">\n//                Register here\n//              </button>\n//            </p>\n//          </div>\n//        </div>\n//      );\n//    } else if (view === \"register\") {\n//      return (\n//        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 font-sans\">\n//          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-sm\">\n//            <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Register</h2>\n//            {message && <div className=\"bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\n//            <div className=\"mb-4\">\n//              <input\n//                type=\"email\"\n//                placeholder=\"Email\"\n//                value={email}\n//                onChange={(e) => setEmail(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <div className=\"mb-4\">\n//              <input\n//                type=\"password\"\n//                placeholder=\"Password\"\n//                value={password}\n//                onChange={(e) => setPassword(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <div className=\"mb-4\">\n//              <input\n//                type=\"tel\" // Use tel for phone numbers\n//                placeholder=\"Phone Number (e.g., +11234567890)\"\n//                value={phone}\n//                onChange={(e) => setPhone(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <div className=\"mb-6\">\n//              <input\n//                type=\"text\"\n//                placeholder=\"Optional: Telegram Chat ID\"\n//                value={telegramChatId}\n//                onChange={(e) => setTelegramChatId(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <button\n//              onClick={handleRegister}\n//              className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200\"\n//            >\n//              Register & Get OTP\n//            </button>\n//            <p className=\"mt-4 text-center text-gray-600\">\n//              Already have an account?{\" \"}\n//              <button onClick={() => { setView(\"login\"); setMessage(\"\"); }} className=\"text-blue-600 hover:underline\">\n//                Log in\n//              </button>\n//            </p>\n//          </div>\n//        </div>\n//      );\n//    } else if (view === \"verify-otp\") {\n//      return (\n//        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 font-sans\">\n//          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-sm\">\n//            <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Verify OTP</h2>\n//            {message && <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\n//            <div className=\"mb-4\">\n//              <input\n//                type=\"email\"\n//                placeholder=\"Email (used for registration)\"\n//                value={email}\n//                onChange={(e) => setEmail(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//                disabled // Email should typically be pre-filled or read-only here\n//              />\n//            </div>\n//            <div className=\"mb-4\">\n//              <input\n//                type=\"text\"\n//                placeholder=\"OTP Code\"\n//                value={otp}\n//                onChange={(e) => setOtp(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <div className=\"mb-6\">\n//              <input\n//                type=\"text\"\n//                placeholder=\"Optional: Telegram Chat ID (to link account)\"\n//                value={telegramChatId}\n//                onChange={(e) => setTelegramChatId(e.target.value)}\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//              />\n//            </div>\n//            <button\n//              onClick={handleVerifyOtp}\n//              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200\"\n//            >\n//              Verify OTP\n//            </button>\n//          </div>\n//        </div>\n//      );\n//    } else if (view === \"dashboard\") {\n//      return (\n//        <div className=\"p-4 bg-gray-100 min-h-screen font-sans\">\n//          <h1 className=\"text-3xl font-bold mb-6 text-gray-800 text-center\">Invoice Manager</h1>\n//          {message && <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\n//          <TaskPoller token={token} onUpdate={setInvoices}/>\n//\n//          <div className=\"flex justify-end mb-4\">\n//            <button\n//              onClick={handleDownloadCSV}\n//              className=\"bg-purple-600 text-white py-2 px-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition duration-200 mr-2\"\n//            >\n//              Download Invoices as CSV\n//            </button>\n//            <button\n//              onClick={() => {\n//                setToken(null);\n//                setEmail(\"\");\n//                setPassword(\"\");\n//                setPhone(\"\");\n//                setOtp(\"\");\n//                setTelegramChatId(\"\");\n//                setView(\"login\");\n//                setMessage(\"Logged out successfully.\");\n//                clearMessage();\n//              }}\n//              className=\"bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-200\"\n//            >\n//              Logout\n//            </button>\n//          </div>\n//\n//          <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n//            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Invoices</h2>\n//            <div style={{ height: 400, width: \"100%\" }} className=\"mb-6\">\n//              <DataGrid\n//                rows={invoices.map(i=>({ ...i, id: i.id }))}\n//                columns={[\n//                  { field: \"id\", headerName: \"ID\", width: 70 },\n//                  { field: \"created_at\", headerName: \"Created At\", width: 180 },\n//                  {\n//                    field: \"category\",\n//                    headerName: \"Category\",\n//                    width: 130,\n//                    valueGetter: (params) => params.row.category || \"Uncategorized\"\n//                  },\n//                  {\n//                    field: \"preview_url\",\n//                    headerName: \"Download\",\n//                    width: 150,\n//                    renderCell: (params) => (\n//                      <div className=\"flex space-x-2\">\n//                        <a\n//                          href={params.value}\n//                          download\n//                          className=\"text-green-600 hover:underline px-2 py-1 rounded-md bg-green-100\"\n//                          style={params.value === \"#\" ? { pointerEvents: \"none\", opacity: 0.6 } : {}}\n//                        >\n//                          Download\n//                        </a>\n//                      </div>\n//                    ),\n//                  },\n//                ]}\n//                pageSize={5}\n//                rowsPerPageOptions={[5]}\n//                className=\"rounded-md\"\n//              />\n//            </div>\n//          </div>\n//\n//          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Category Summary</h2>\n//            {chartData.labels && chartData.labels.length > 0 ? (\n//              <div className=\"flex justify-center h-80\">\n//                <Pie data={chartData} options={{ maintainAspectRatio: false, responsive: true }} />\n//              </div>\n//            ) : (\n//              <p className=\"text-center text-gray-600\">No category data available.</p>\n//            )}\n//          </div>\n//        </div>\n//      );\n//    }\n//  };\n//\n//  return <>{renderContent()}</>;\n//}\n//\n//export default App;\n//\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DataGrid","Pie","login","fetchInvoices","registerUser","verifyOtp","uploadInvoice","TaskPoller","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","invoices","setInvoices","chartData","setChartData","email","setEmail","password","setPassword","phone","setPhone","otp","setOtp","telegramChatId","setTelegramChatId","view","setView","message","setMessage","selectedFile","setSelectedFile","uploading","setUploading","fileInputRef","clearMessage","setTimeout","handleLogin","access_token","localStorage","setItem","error","_error$response","_error$response$data","console","response","data","detail","handleRegister","_error$response2","_error$response2$data","handleVerifyOtp","_error$response3","_error$response3$data","handleLogout","removeItem","updateInvoices","newInvoices","log","Array","isArray","invoicesWithIds","map","invoice","index","id","Date","now","categoryCounts","reduce","acc","category","labels","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","warn","handleFileChange","event","target","files","name","handleUploadInvoice","current","value","updatedInvoices","_error$response4","_error$response4$data","storedToken","getItem","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","type","placeholder","onChange","e","onClick","disabled","onUpdate","alert","ref","accept","click","rows","columns","field","headerName","width","valueFormatter","params","length","rawText","raw_text","substring","JSON","stringify","toLocaleString","renderCell","href","download","style","pointerEvents","opacity","pageSize","rowsPerPageOptions","options","maintainAspectRatio","responsive","_c","$RefreshReg$"],"sources":["C:/Users/Admin/telegram_invoice_manager/frontend-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { login, fetchInvoices, registerUser, verifyOtp, uploadInvoice } from \"./api\";\r\nimport TaskPoller from \"./components/TaskPoller\";\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [telegramChatId, setTelegramChatId] = useState(\"\");\r\n  const [view, setView] = useState(\"login\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const clearMessage = () => {\r\n    setTimeout(() => setMessage(\"\"), 5000);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    setMessage(\"\");\r\n    try {\r\n      const { access_token } = await login(email, password);\r\n      setToken(access_token);\r\n      localStorage.setItem(\"authToken\", access_token);\r\n      setView(\"dashboard\");\r\n      setMessage(\"Login successful!\");\r\n      clearMessage();\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      setMessage(`Login failed: ${error.response?.data?.detail || error.message}`);\r\n      clearMessage();\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    setMessage(\"\");\r\n    try {\r\n      const response = await registerUser(email, password, phone, telegramChatId);\r\n      setMessage(response.message || \"Registration successful! Please verify OTP.\");\r\n      setView(\"verify-otp\");\r\n      clearMessage();\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      setMessage(`Registration failed: ${error.response?.data?.detail || error.message}`);\r\n      clearMessage();\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    setMessage(\"\");\r\n    try {\r\n      const { access_token } = await verifyOtp(email, otp, telegramChatId);\r\n      setToken(access_token);\r\n      localStorage.setItem(\"authToken\", access_token);\r\n      setView(\"dashboard\");\r\n      setMessage(\"OTP verified and logged in successfully!\");\r\n      clearMessage();\r\n    } catch (error) {\r\n      console.error(\"OTP verification error:\", error);\r\n      setMessage(`OTP verification failed: ${error.response?.data?.detail || error.message}`);\r\n      clearMessage();\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"authToken\");\r\n    setInvoices([]);\r\n    setChartData({});\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setPhone(\"\");\r\n    setOtp(\"\");\r\n    setTelegramChatId(\"\");\r\n    setView(\"login\");\r\n    setMessage(\"Logged out successfully.\");\r\n    clearMessage();\r\n  };\r\n\r\n  const updateInvoices = (newInvoices) => {\r\n    console.log(\"App.js - updateInvoices: Received newInvoices:\", newInvoices); // Debugging log\r\n    // Ensure newInvoices is an array and each item has an 'id' for DataGrid\r\n    if (Array.isArray(newInvoices)) {\r\n      const invoicesWithIds = newInvoices.map((invoice, index) => ({\r\n        ...invoice,\r\n        // Use existing invoice.id or fallback to a unique index if id is missing/null/undefined\r\n        id: invoice.id || `temp-id-${index}-${Date.now()}`\r\n      }));\r\n      setInvoices(invoicesWithIds);\r\n\r\n      const categoryCounts = invoicesWithIds.reduce((acc, invoice) => {\r\n        const category = invoice.category || \"Uncategorized\";\r\n        acc[category] = (acc[category] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n\r\n      setChartData({\r\n        labels: Object.keys(categoryCounts),\r\n        datasets: [\r\n          {\r\n            data: Object.values(categoryCounts),\r\n            backgroundColor: [\r\n              '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40',\r\n              '#8A2BE2', '#7FFF00', '#D2691E', '#FF7F50', '#6495ED', '#DC143C',\r\n              '#00CED1', '#FFD700', '#ADFF2F', '#FF69B4', '#20B2AA', '#F0E68C'\r\n            ],\r\n            hoverBackgroundColor: [\r\n              '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40',\r\n              '#8A2BE2', '#7FFF00', '#D2691E', '#FF7F50', '#6495ED', '#DC143C',\r\n              '#00CED1', '#FFD700', '#ADFF2F', '#FF69B4', '#20B2AA', '#F0E68C'\r\n            ],\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      console.warn(\"App.js - updateInvoices: Received non-array for newInvoices:\", newInvoices);\r\n      setInvoices([]);\r\n      setChartData({});\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n      setMessage(`Selected file: ${event.target.files[0].name}`);\r\n    } else {\r\n      setSelectedFile(null);\r\n      setMessage(\"No file selected.\");\r\n      clearMessage();\r\n    }\r\n  };\r\n\r\n  const handleUploadInvoice = async () => {\r\n    if (!selectedFile) {\r\n      setMessage(\"Please select a file to upload.\");\r\n      clearMessage();\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    setMessage(\"Uploading invoice...\");\r\n    try {\r\n      const response = await uploadInvoice(token, selectedFile);\r\n      setMessage(response.message || \"Invoice uploaded successfully!\");\r\n      setSelectedFile(null);\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = \"\"; // Clear file input visual\r\n      }\r\n      // Immediately refresh invoices after successful upload\r\n      const updatedInvoices = await fetchInvoices(token);\r\n      updateInvoices(updatedInvoices);\r\n      clearMessage();\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      setMessage(`Upload failed: ${error.response?.data?.detail || error.message || \"Unknown error\"}`);\r\n      clearMessage();\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"authToken\");\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      setView(\"dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const renderContent = () => {\r\n    if (view === \"login\") {\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n            <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Login</h2>\r\n            {message && <p className={`mb-4 text-center ${message.includes(\"failed\") ? \"text-red-500\" : \"text-green-500\"}`}>{message}</p>}\r\n            <div className=\"mb-4\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={handleLogin}\r\n              className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\"\r\n            >\r\n              Login\r\n            </button>\r\n            <p className=\"mt-4 text-center text-gray-600\">\r\n              Don't have an account?{\" \"}\r\n              <button onClick={() => setView(\"register\")} className=\"text-blue-600 hover:underline\">\r\n                Register\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (view === \"register\") {\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n            <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Register</h2>\r\n            {message && <p className={`mb-4 text-center ${message.includes(\"failed\") ? \"text-red-500\" : \"text-green-500\"}`}>{message}</p>}\r\n            <div className=\"mb-4\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Phone Number\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n             <input\r\n              type=\"text\"\r\n              className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Telegram Chat ID (Optional)\"\r\n              value={telegramChatId}\r\n              onChange={(e) => setTelegramChatId(e.target.value)}\r\n            />\r\n            </div>\r\n            <button\r\n              onClick={handleRegister}\r\n              className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\"\r\n            >\r\n              Register\r\n            </button>\r\n            <p className=\"mt-4 text-center text-gray-600\">\r\n              Already have an account?{\" \"}\r\n              <button onClick={() => setView(\"login\")} className=\"text-blue-600 hover:underline\">\r\n                Login\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (view === \"verify-otp\") {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n                <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n                    <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Verify OTP</h2>\r\n                    {message && <p className={`mb-4 text-center ${message.includes(\"failed\") ? \"text-red-500\" : \"text-green-500\"}`}>{message}</p>}\r\n                    <div className=\"mb-4\">\r\n                      <input\r\n                          type=\"email\"\r\n                          className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-100\"\r\n                          placeholder=\"Email\"\r\n                          value={email}\r\n                          disabled\r\n                      />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                      <input\r\n                          type=\"text\"\r\n                          className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                          placeholder=\"Enter OTP\"\r\n                          value={otp}\r\n                          onChange={(e) => setOtp(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <button\r\n                        onClick={handleVerifyOtp}\r\n                        className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\"\r\n                    >\r\n                        Verify OTP\r\n                    </button>\r\n                    <p className=\"mt-4 text-center text-gray-600\">\r\n                        Back to{\" \"}\r\n                        <button onClick={() => setView(\"login\")} className=\"text-blue-600 hover:underline\">\r\n                            Login\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (view === \"dashboard\") {\r\n      console.log(\"App.js - renderDashboard: Current invoices state:\", invoices); // Debugging log\r\n      return (\r\n        <div className=\"min-h-screen bg-gray-100 p-8\">\r\n          {/* TaskPoller will continuously fetch invoices and update the state */}\r\n          <TaskPoller onUpdate={updateInvoices} token={token} />\r\n\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">Invoice Dashboard</h1>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 transition duration-200\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n\r\n          {message && <p className={`mb-4 text-center ${message.includes(\"failed\") || message.includes(\"Error\") ? \"text-red-500\" : \"text-green-500\"}`}>{message}</p>}\r\n\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Invoice Actions</h2>\r\n            {/* Reduced space-x to bring buttons closer */}\r\n            <div className=\"flex items-center space-x-2\">\r\n              {/* Download CSV Button */}\r\n              <button\r\n                onClick={() => alert(\"Download CSV functionality will be implemented here!\")} // Placeholder\r\n                className=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 transition duration-200\"\r\n              >\r\n                Download Invoices as CSV\r\n              </button>\r\n\r\n              {/* Hidden File Input for Upload */}\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileChange}\r\n                accept=\"image/*\"\r\n                className=\"hidden\"\r\n              />\r\n              {/* Button to trigger file input - \"Upload New Invoice\" */}\r\n              <button\r\n                onClick={() => fileInputRef.current.click()}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-200\"\r\n                disabled={uploading}\r\n              >\r\n                Upload New Invoice\r\n              </button>\r\n\r\n              {/* Confirm Upload Button (only if file is selected) */}\r\n              {selectedFile && (\r\n                <button\r\n                  onClick={handleUploadInvoice}\r\n                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-opacity-50 transition duration-200\"\r\n                  disabled={uploading}\r\n                >\r\n                  {uploading ? \"Uploading...\" : `Confirm Upload (${selectedFile.name})`}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md overflow-x-auto\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Your Invoices</h2>\r\n              {/* Ensure DataGrid receives invoices */}\r\n              <DataGrid\r\n                rows={invoices} // 'invoices' state should already have 'id' property now\r\n                columns={[\r\n                  { field: \"id\", headerName: \"ID\", width: 90 },\r\n                  { field: \"status\", headerName: \"Status\", width: 150 },\r\n                  { field: \"category\", headerName: \"Category\", width: 180 },\r\n                  {\r\n                    field: \"extracted_data\",\r\n                    headerName: \"Extracted Data\", // Explicitly English\r\n                    width: 300,\r\n                    valueFormatter: (params) => {\r\n                      const data = params.value;\r\n                      if (data && typeof data === 'object') {\r\n                          const keys = Object.keys(data);\r\n                          if (keys.length > 0) {\r\n                              const rawText = data.raw_text ? data.raw_text.substring(0, 50) + \"...\" : \"\";\r\n                              return rawText || JSON.stringify(data).substring(0, 50) + \"...\";\r\n                          }\r\n                      }\r\n                      return JSON.stringify(data);\r\n                    },\r\n                  },\r\n                  {\r\n                    field: \"created_at\",\r\n                    headerName: \"Created At\", // Explicitly English\r\n                    width: 200,\r\n                    valueFormatter: (params) => new Date(params.value).toLocaleString(),\r\n                  },\r\n                  {\r\n                    field: \"preview_url\",\r\n                    headerName: \"Download\", // Explicitly English\r\n                    width: 150,\r\n                    renderCell: (params) => (\r\n                      <div className=\"flex space-x-2\">\r\n                        <a\r\n                          href={params.value}\r\n                          download\r\n                          className=\"text-green-600 hover:underline px-2 py-1 rounded-md bg-green-100\"\r\n                          style={params.value === \"#\" ? { pointerEvents: \"none\", opacity: 0.6 } : {}}\r\n                        >\r\n                          Download\r\n                        </a>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ]}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5]}\r\n                className=\"rounded-md\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Category Summary</h2>\r\n              {chartData.labels && chartData.labels.length > 0 ? (\r\n                <div className=\"flex justify-center h-80\">\r\n                  <Pie data={chartData} options={{ maintainAspectRatio: false, responsive: true }} />\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-center text-gray-600\">No category data available.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <>{renderContent()}</>;\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n//import React, { useState, useEffect, useRef } from \"react\";\r\n//import { DataGrid } from \"@mui/x-data-grid\";\r\n//import { Pie } from \"react-chartjs-2\";\r\n//import { login, fetchInvoices, registerUser, verifyOtp } from \"./api\"; // Import new API functions\r\n//import TaskPoller from \"./components/TaskPoller\";\r\n//\r\n//function App() {\r\n//  const [token, setToken] = useState(null);\r\n//  const [invoices, setInvoices] = useState([]);\r\n//  const [chartData, setChartData] = useState({});\r\n//  const [email, setEmail] = useState(\"\");\r\n//  const [password, setPassword] = useState(\"\");\r\n//  const [phone, setPhone] = useState(\"\"); // New state for phone number\r\n//  const [otp, setOtp] = useState(\"\"); // New state for OTP\r\n//  const [telegramChatId, setTelegramChatId] = useState(\"\"); // New state for Telegram Chat ID\r\n//  const [view, setView] = useState(\"login\"); // 'login', 'register', 'verify-otp', 'dashboard'\r\n//  const [message, setMessage] = useState(\"\"); // For displaying success/error messages to the user\r\n//\r\n//  // Function to clear messages after a delay\r\n//  const clearMessage = () => {\r\n//    setTimeout(() => setMessage(\"\"), 5000); // Clear message after 5 seconds\r\n//  };\r\n//\r\n//  const handleLogin = async () => {\r\n//    setMessage(\"\"); // Clear previous messages\r\n//    try {\r\n//      const { access_token } = await login(email, password);\r\n//      setToken(access_token);\r\n//      setView(\"dashboard\"); // Switch to dashboard on successful login\r\n//      setMessage(\"Login successful!\");\r\n//      clearMessage();\r\n//    } catch (error) {\r\n//      console.error(\"Login failed:\", error);\r\n//      setMessage(\"Login failed! Please check your email and password.\");\r\n//      clearMessage();\r\n//    }\r\n//  };\r\n//\r\n//  const handleRegister = async () => {\r\n//    setMessage(\"\"); // Clear previous messages\r\n//    try {\r\n//      // Pass optional telegramChatId only if it's not empty\r\n//      const tgChatIdToSend = telegramChatId.trim() === \"\" ? null : telegramChatId.trim();\r\n//      const response = await registerUser(email, password, phone, tgChatIdToSend);\r\n//      setMessage(response.message || \"Registration successful! Please check your phone for OTP.\");\r\n//      setView(\"verify-otp\"); // Move to OTP verification after registration\r\n//      clearMessage();\r\n//    } catch (error) {\r\n//      console.error(\"Registration failed:\", error);\r\n//      setMessage(error.response?.data?.detail || \"Registration failed! Email or phone might be already registered.\");\r\n//      clearMessage();\r\n//    }\r\n//  };\r\n//\r\n//  const handleVerifyOtp = async () => {\r\n//    setMessage(\"\"); // Clear previous messages\r\n//    try {\r\n//      // Pass optional telegramChatId only if it's not empty\r\n//      const tgChatIdToSend = telegramChatId.trim() === \"\" ? null : telegramChatId.trim();\r\n//      const { message: verificationMessage, token: jwtToken } = await verifyOtp(email, otp, tgChatIdToSend);\r\n//      setToken(jwtToken);\r\n//      setMessage(verificationMessage);\r\n//      setView(\"dashboard\"); // Move to dashboard on successful OTP verification\r\n//      clearMessage();\r\n//    } catch (error) {\r\n//      console.error(\"OTP verification failed:\", error);\r\n//      setMessage(error.response?.data?.detail || \"OTP verification failed! Invalid or expired OTP.\");\r\n//      clearMessage();\r\n//    }\r\n//  };\r\n//\r\n//  useEffect(() => {\r\n//    if (token) {\r\n//      fetchInvoices(token).then(setInvoices);\r\n//    }\r\n//  }, [token]);\r\n//\r\n//  useEffect(() => {\r\n//    const counts = invoices.reduce((acc, inv) => {\r\n//      const category = inv.category && inv.category !== \"\" ? inv.category : \"Uncategorized\";\r\n//      acc[category] = (acc[category] || 0) + 1;\r\n//      return acc;\r\n//    }, {});\r\n//    setChartData({\r\n//      labels: Object.keys(counts),\r\n//      datasets: [{\r\n//        data: Object.values(counts),\r\n//        backgroundColor: [\r\n//          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\r\n//          '#FF9F40', '#FFCD56', '#C9CBCF', '#7E57C2', '#42A5F5', '#8D6E63', '#9CCC65', '#26A69A'\r\n//        ],\r\n//        hoverBackgroundColor: [\r\n//          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\r\n//          '#FF9F40', '#FFCD56', '#C9CBCF', '#7E57C2', '#42A5F5', '#8D6E63', '#9CCC65', '#26A69A'\r\n//        ]\r\n//      }]\r\n//    });\r\n//  }, [invoices]);\r\n//\r\n//  const handleDownloadCSV = () => {\r\n//    if (invoices.length === 0) {\r\n//      setMessage(\"No invoices to download.\");\r\n//      clearMessage();\r\n//      return;\r\n//    }\r\n//\r\n//    // Prepare CSV header\r\n//    const headers = [\"ID\", \"Created At\", \"Category\", \"Status\", \"Raw Text\", \"Preview URL\"];\r\n//    // Extract actual data rows\r\n//    const csvRows = invoices.map(invoice => {\r\n//      // Flatten extracted_data for CSV, or represent as JSON string\r\n//      const rawText = invoice.extracted_data?.raw_text ? JSON.stringify(invoice.extracted_data.raw_text) : \"\";\r\n//      return [\r\n//        invoice.id,\r\n//        invoice.created_at,\r\n//        `\"${invoice.category}\"`, // Quote category to handle commas if any\r\n//        invoice.status,\r\n//        `\"${rawText.replace(/\"/g, '\"\"')}\"`, // Escape double quotes within the text\r\n//        invoice.preview_url\r\n//      ].join(\",\");\r\n//    });\r\n//\r\n//    const csvContent = [\r\n//      headers.join(\",\"),\r\n//      ...csvRows\r\n//    ].join(\"\\n\");\r\n//\r\n//    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n//    const link = document.createElement('a');\r\n//    if (link.download !== undefined) { // Feature detection for download attribute\r\n//      const url = URL.createObjectURL(blob);\r\n//      link.setAttribute('href', url);\r\n//      link.setAttribute('download', 'invoices.csv');\r\n//      link.style.visibility = 'hidden';\r\n//      document.body.appendChild(link);\r\n//      link.click();\r\n//      document.body.removeChild(link);\r\n//      setMessage(\"Invoices downloaded as CSV!\");\r\n//      clearMessage();\r\n//    } else {\r\n//      setMessage(\"Your browser does not support downloading files directly.\");\r\n//      clearMessage();\r\n//    }\r\n//  };\r\n//\r\n//\r\n//  // Render different views based on the 'view' state\r\n//  const renderContent = () => {\r\n//    if (view === \"login\") {\r\n//      return (\r\n//        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 font-sans\">\r\n//          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-sm\">\r\n//            <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Login</h2>\r\n//            {message && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\r\n//            <div className=\"mb-4\">\r\n//              <input\r\n//                type=\"email\"\r\n//                placeholder=\"Email\"\r\n//                value={email}\r\n//                onChange={(e) => setEmail(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <div className=\"mb-6\">\r\n//              <input\r\n//                type=\"password\"\r\n//                placeholder=\"Password\"\r\n//                value={password}\r\n//                onChange={(e) => setPassword(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <button\r\n//              onClick={handleLogin}\r\n//              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200\"\r\n//            >\r\n//              Log In\r\n//            </button>\r\n//            <p className=\"mt-4 text-center text-gray-600\">\r\n//              Don't have an account?{\" \"}\r\n//              <button onClick={() => { setView(\"register\"); setMessage(\"\"); }} className=\"text-blue-600 hover:underline\">\r\n//                Register here\r\n//              </button>\r\n//            </p>\r\n//          </div>\r\n//        </div>\r\n//      );\r\n//    } else if (view === \"register\") {\r\n//      return (\r\n//        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 font-sans\">\r\n//          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-sm\">\r\n//            <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Register</h2>\r\n//            {message && <div className=\"bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\r\n//            <div className=\"mb-4\">\r\n//              <input\r\n//                type=\"email\"\r\n//                placeholder=\"Email\"\r\n//                value={email}\r\n//                onChange={(e) => setEmail(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <div className=\"mb-4\">\r\n//              <input\r\n//                type=\"password\"\r\n//                placeholder=\"Password\"\r\n//                value={password}\r\n//                onChange={(e) => setPassword(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <div className=\"mb-4\">\r\n//              <input\r\n//                type=\"tel\" // Use tel for phone numbers\r\n//                placeholder=\"Phone Number (e.g., +11234567890)\"\r\n//                value={phone}\r\n//                onChange={(e) => setPhone(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <div className=\"mb-6\">\r\n//              <input\r\n//                type=\"text\"\r\n//                placeholder=\"Optional: Telegram Chat ID\"\r\n//                value={telegramChatId}\r\n//                onChange={(e) => setTelegramChatId(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <button\r\n//              onClick={handleRegister}\r\n//              className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200\"\r\n//            >\r\n//              Register & Get OTP\r\n//            </button>\r\n//            <p className=\"mt-4 text-center text-gray-600\">\r\n//              Already have an account?{\" \"}\r\n//              <button onClick={() => { setView(\"login\"); setMessage(\"\"); }} className=\"text-blue-600 hover:underline\">\r\n//                Log in\r\n//              </button>\r\n//            </p>\r\n//          </div>\r\n//        </div>\r\n//      );\r\n//    } else if (view === \"verify-otp\") {\r\n//      return (\r\n//        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 font-sans\">\r\n//          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-sm\">\r\n//            <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Verify OTP</h2>\r\n//            {message && <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\r\n//            <div className=\"mb-4\">\r\n//              <input\r\n//                type=\"email\"\r\n//                placeholder=\"Email (used for registration)\"\r\n//                value={email}\r\n//                onChange={(e) => setEmail(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//                disabled // Email should typically be pre-filled or read-only here\r\n//              />\r\n//            </div>\r\n//            <div className=\"mb-4\">\r\n//              <input\r\n//                type=\"text\"\r\n//                placeholder=\"OTP Code\"\r\n//                value={otp}\r\n//                onChange={(e) => setOtp(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <div className=\"mb-6\">\r\n//              <input\r\n//                type=\"text\"\r\n//                placeholder=\"Optional: Telegram Chat ID (to link account)\"\r\n//                value={telegramChatId}\r\n//                onChange={(e) => setTelegramChatId(e.target.value)}\r\n//                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//              />\r\n//            </div>\r\n//            <button\r\n//              onClick={handleVerifyOtp}\r\n//              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200\"\r\n//            >\r\n//              Verify OTP\r\n//            </button>\r\n//          </div>\r\n//        </div>\r\n//      );\r\n//    } else if (view === \"dashboard\") {\r\n//      return (\r\n//        <div className=\"p-4 bg-gray-100 min-h-screen font-sans\">\r\n//          <h1 className=\"text-3xl font-bold mb-6 text-gray-800 text-center\">Invoice Manager</h1>\r\n//          {message && <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{message}</div>}\r\n//          <TaskPoller token={token} onUpdate={setInvoices}/>\r\n//\r\n//          <div className=\"flex justify-end mb-4\">\r\n//            <button\r\n//              onClick={handleDownloadCSV}\r\n//              className=\"bg-purple-600 text-white py-2 px-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition duration-200 mr-2\"\r\n//            >\r\n//              Download Invoices as CSV\r\n//            </button>\r\n//            <button\r\n//              onClick={() => {\r\n//                setToken(null);\r\n//                setEmail(\"\");\r\n//                setPassword(\"\");\r\n//                setPhone(\"\");\r\n//                setOtp(\"\");\r\n//                setTelegramChatId(\"\");\r\n//                setView(\"login\");\r\n//                setMessage(\"Logged out successfully.\");\r\n//                clearMessage();\r\n//              }}\r\n//              className=\"bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-200\"\r\n//            >\r\n//              Logout\r\n//            </button>\r\n//          </div>\r\n//\r\n//          <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\r\n//            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Invoices</h2>\r\n//            <div style={{ height: 400, width: \"100%\" }} className=\"mb-6\">\r\n//              <DataGrid\r\n//                rows={invoices.map(i=>({ ...i, id: i.id }))}\r\n//                columns={[\r\n//                  { field: \"id\", headerName: \"ID\", width: 70 },\r\n//                  { field: \"created_at\", headerName: \"Created At\", width: 180 },\r\n//                  {\r\n//                    field: \"category\",\r\n//                    headerName: \"Category\",\r\n//                    width: 130,\r\n//                    valueGetter: (params) => params.row.category || \"Uncategorized\"\r\n//                  },\r\n//                  {\r\n//                    field: \"preview_url\",\r\n//                    headerName: \"Download\",\r\n//                    width: 150,\r\n//                    renderCell: (params) => (\r\n//                      <div className=\"flex space-x-2\">\r\n//                        <a\r\n//                          href={params.value}\r\n//                          download\r\n//                          className=\"text-green-600 hover:underline px-2 py-1 rounded-md bg-green-100\"\r\n//                          style={params.value === \"#\" ? { pointerEvents: \"none\", opacity: 0.6 } : {}}\r\n//                        >\r\n//                          Download\r\n//                        </a>\r\n//                      </div>\r\n//                    ),\r\n//                  },\r\n//                ]}\r\n//                pageSize={5}\r\n//                rowsPerPageOptions={[5]}\r\n//                className=\"rounded-md\"\r\n//              />\r\n//            </div>\r\n//          </div>\r\n//\r\n//          <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Category Summary</h2>\r\n//            {chartData.labels && chartData.labels.length > 0 ? (\r\n//              <div className=\"flex justify-center h-80\">\r\n//                <Pie data={chartData} options={{ maintainAspectRatio: false, responsive: true }} />\r\n//              </div>\r\n//            ) : (\r\n//              <p className=\"text-center text-gray-600\">No category data available.</p>\r\n//            )}\r\n//          </div>\r\n//        </div>\r\n//      );\r\n//    }\r\n//  };\r\n//\r\n//  return <>{renderContent()}</>;\r\n//}\r\n//\r\n//export default App;\r\n//\r\n"],"mappings":"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UAAA;cAAAC,YAAA;YAAA,OAAG,CACxE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV;EACF,CAAC;EAED,oBAAO9F,OAAA,CAAAE,SAAA;IAAAwF,QAAA,EAAGF,aAAa,CAAC;EAAC,gBAAG,CAAC;AAC/B;AAACpF,EAAA,CAvbQD,GAAG;AAAAiI,EAAA,GAAHjI,GAAG;AAybZ,eAAeA,GAAG;;AAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}